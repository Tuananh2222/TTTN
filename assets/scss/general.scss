@import 'font', 'variable';
* {
  font-family: 'Inter', sans-serif;
  font-weight: 400;
}

// Smart phone
@mixin sp {
  @media not screen and (min-width: #{$widthWeb}) {
    @content;
  }
}

// PC
@mixin pc {
  @media screen and (min-width: #{$widthWeb}) {
    @content;
  }
}

*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

html {
  box-sizing: border-box;
}

body {
  font-size: 18px;
  font-weight: 300;
  line-height: 2;
  color: $accent-color;
  margin: 0;
  width: 100%;
}

body {
  margin: 0px;
  &::-webkit-scrollbar-track {
    background-color: transparent;
  }
  &::-webkit-scrollbar {
    width: 6px;
    background-color: transparent;
  }
  &::-webkit-scrollbar-thumb {
    border-radius: 10px;
    background-color: #babac0;
  }
  &.small::-webkit-scrollbar {
    width: 3px;
  }
  &.small::-webkit-scrollbar-thumb {
    border-radius: 5px;
  }
}

body.no-scroll {
  overflow: hidden;
}

::-webkit-input-placeholder {
  color: #7a7a7a; /* WebKit browsers */
}
:-ms-input-placeholder {
  color: #7a7a7a; /* Internet Explorer 10+ */
}

h1,
h2,
h3,
h4 {
  margin-block-start: 0;
  margin-block-end: 0;
  margin-inline-start: 0;
  margin-inline-end: 0;
}

p {
  display: block;
  margin-block-start: 0;
  margin-block-end: 0;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
}

// css class for button
@mixin btn(
  $typeButton: '',
  $typeColor: '',
  $colorValue: '',
  $width: 260px,
  $height: 48px,
  $background: $primary,
  $color: $white,
  $radius: 6px,
  $cursor: pointer
) {
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  border: none;

  width: $width;
  height: $height;
  padding: 0;
  background-color: inherit;

  @if ($typeButton == 'normal') {
    @if $typeColor == 'gradient' {
      background: $colorValue;
      color: $color;
    }
    @if $typeColor == 'secondary' {
      background: $colorValue;
      color: $color;
    }
    @if $typeColor == 'orange' {
      background: $colorValue;
      color: $color;
    }
    @if $typeColor == 'disable' {
      background: $disable !important;
      color: $color;
      pointer-events: none;
      @if $typeColor == 'caption' {
        background: $colorValue;
        color: $white;
      }
    }
    @if $typeColor == 'caption' {
      background: $colorValue;
      color: $white;
    }
  }

  @if ($typeButton == 'ghost') {
    @if $typeColor == 'gradient' {
      border: 1px solid $primary !important;
      color: $primary;
    } @else if $typeColor == 'orange' {
      border: 1px solid $station_primary !important;
      color: $station_primary;
    } @else if $typeColor == 'caption' {
      border: 1px solid $caption !important;
      color: $caption;
    } @else {
      background: $white;
      border: 1px solid $background !important;
      color: $background;
    }
  }

  &:hover {
    opacity: 0.8;
  }

  border-radius: $radius;
  cursor: $cursor;

  @content;
}

@each $typeButton in $types_button {
  @each $typeColor, $colorValue in $types_color {
    .btn-#{$typeButton}-#{$typeColor} {
      @include btn($typeButton, $typeColor, $colorValue);
    }
  }
}
